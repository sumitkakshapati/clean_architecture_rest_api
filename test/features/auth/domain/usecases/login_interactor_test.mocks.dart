// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_clean_architecture_template/test/features/auth/domain/usecases/login_interactor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter/material.dart' as _i4;
import 'package:flutter_clean_architecture_template/core/database/database_service.dart'
    as _i3;
import 'package:flutter_clean_architecture_template/core/services/user_services.dart'
    as _i8;
import 'package:flutter_clean_architecture_template/features/auth/domain/entities/param/login_param.dart'
    as _i7;
import 'package:flutter_clean_architecture_template/features/auth/domain/entities/user.dart'
    as _i2;
import 'package:flutter_clean_architecture_template/features/auth/domain/repositories/user_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseService_1 extends _i1.SmartFake
    implements _i3.DatabaseService {
  _FakeDatabaseService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueNotifier_2<T> extends _i1.SmartFake
    implements _i4.ValueNotifier<T> {
  _FakeValueNotifier_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i5.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.User> login(_i7.LoginParam? param) => (super.noSuchMethod(
        Invocation.method(
          #login,
          [param],
        ),
        returnValue: _i6.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #login,
            [param],
          ),
        )),
      ) as _i6.Future<_i2.User>);
}

/// A class which mocks [UserServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserServices extends _i1.Mock implements _i8.UserServices {
  MockUserServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseService get databaseService => (super.noSuchMethod(
        Invocation.getter(#databaseService),
        returnValue: _FakeDatabaseService_1(
          this,
          Invocation.getter(#databaseService),
        ),
      ) as _i3.DatabaseService);
  @override
  _i4.ValueNotifier<_i2.User?> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeValueNotifier_2<_i2.User?>(
          this,
          Invocation.getter(#user),
        ),
      ) as _i4.ValueNotifier<_i2.User?>);
  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> saveUser(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> removeUser() => (super.noSuchMethod(
        Invocation.method(
          #removeUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
